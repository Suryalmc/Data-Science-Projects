Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000
ii. Hours = 1,562
iii. Category = 2,643
iv. Attribute = 1,115
v. Review = 9,581 Foreign key: user_id
vi. Checkin = 493
vii. Photo = 6,493 Foreign key: business_id
viii. Tip = 3,979 
ix. User = 10,000
x. Friend = 11
xi. Elite_years = 2,780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

    	SELECT count(*)
	FROM user 
	where id is null or
	name is null or
	review_count is null or
	yelping_since is null or
	useful is null or 
	funny is null;
	
	
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:		max:		avg:
		1 |          	5 |     		3.7082 
	
	ii. Table: Business, Column: Stars
	
		min:		max:		avg:
	    	1.0 |       	5.0 |      	3.6549 	
	
	iii. Table: Tip, Column: Likes
	
		min:		max:		avg:
	    	0 |          	2 |        	0.0144 	
	
	iv. Table: Checkin, Column: Count
	
		min:		max:		avg:
	    	1 |         	53 |        	1.9414 	
	
	v. Table: User, Column: Review_count
	
		min:		max:		avg:
		
        		0 |        	2000 |      	24.2995

5. List the cities with the most reviews in descending order:

SQL code used to arrive at answer:

	select city, sum(review_count) from business
	group by city
	order by sum(review_count) desc
	
	
Copy and Paste the Result Below:

+-----------------+-------------------+
| city            | sum(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon
----------------------------
    SQL code used to arrive at answer: 
    SELECT stars
    ,count(stars) AS freq_stars
    FROM business
    WHERE city = 'Avon'
    GROUP BY stars;
---------------------------

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

    +-------+------------+
    | stars | freq_stars |
    +-------+------------+
    |   1.5 |          1 |
    |   2.5 |          2 |
    |   3.5 |          3 |
    |   4.0 |          2 |
    |   4.5 |          1 |
    |   5.0 |          1 |
    +-------+------------+

 ii. Beachwood

SQL code used to arrive at answer:
-----------------------------------------------
    SELECT stars,count(stars) as freq_stars FROM business
    where city = 'Beachwood'
    group by stars;
------------------------------------------------

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

    +-------+------------+
    | stars | freq_stars |
    +-------+------------+
    |   2.0 |          1 |
    |   2.5 |          1 |
    |   3.0 |          2 |
    |   3.5 |          2 |
    |   4.0 |          1 |
    |   4.5 |          2 |
    |   5.0 |          5 |
    +-------+------------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
---------------------------
    SELECT name, review_count from user
    order by review_count desc
    limit 3;
----------------------------
		
Copy and Paste the Result Below:
 
    +--------+--------------+
    | name   | review_count |
    +--------+--------------+
    | Gerald |         2000 |
    | Sara   |         1629 |
    | Yuri   |         1339 |
    +--------+--------------+
     
8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: It seems, there is some positive correlation between reviews and the fans. The following table indicates that review_count is usually higher for higher number of fans:
    
        SELECT  review_count, fans from user
        order by fans desc;
        +--------------+------+
        | review_count | fans |
        +--------------+------+
        |          609 |  503 |
        |          968 |  497 |
        |         1153 |  311 |
        |         2000 |  253 |
        |          930 |  173 |
        |          813 |  159 |
        |          377 |  133 |
        |         1215 |  126 |
        |          862 |  124 |
        |          834 |  120 |
        |          861 |  115 |
        |          408 |  111 |
        |          255 |  105 |
        |         1039 |  104 |
        |          694 |  101 |
        |         1246 |  101 |
        |          307 |   96 |
        |          584 |   89 |
        |          842 |   85 |
        |          220 |   84 |
        |          408 |   81 |
        |          178 |   80 |
        |          754 |   78 |
        |         1339 |   76 |
        |          161 |   73 |
        +--------------+------+
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with word "love" than the word "hate". 
    
        +------------+
        | hate_count |
        +------------+
        |        232 |
        +------------+
        | love_count |
        +------------+
        |       1780 |
        +------------+
	
	SQL code used to arrive at answer:

        SELECT  count(text) as love_count from review
        where text like '%love%';
        
        SELECT  count(text) as hate_count from review
        where text like '%hate%';

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
        SELECT  name, fans  from user
        order by fans desc
        limit 10;
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

i. Do the two groups you chose to analyze have a different distribution of hours?
  
    I chose city = 'Las Vegas' and category = 'Restaurants'. And I selected two entities were they have similar distribution of hours. 
    +-------+-------------+--------------+-------------+----------------------+
    | stars | postal_code | review_count | category    | hours                |
    +-------+-------------+--------------+-------------+----------------------+
    |   3.0 | 89103       |          123 | Restaurants | Saturday|11:00-0:00  |
    |   4.0 | 89146       |          768 | Restaurants | Saturday|10:00-23:00 |
    +-------+-------------+--------------+-------------+----------------------+

ii. Do the two groups you chose to analyze have a different number of reviews?
         
         Yes, they are 123 and 768.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
        
        They are from two different postal codes where  89103 is in "Spring Vally" and 89146 is in from Las 'Vegas Valley'. 
        
SQL code used for analysis:

    SELECT b.stars, c.category, h.hours from business as b
    JOIN category as c
    on b.id = c.business_id
    JOIN hours as h
    on b.id = h.business_id
    where b.city = 'Las Vegas' and c.category = 'Restaurants'
    group by b.stars
    order by b.stars asc;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

    +-------------+----------------+---------------+-------------+
    | total_count | average_rating | average_count | open_status |
    +-------------+----------------+---------------+-------------+
    |        1520 |  3.52039473684 | 23.1980263158 | closed      |
    |        8480 |  3.67900943396 | 31.7570754717 | open        |
    +-------------+----------------+---------------+-------------+
		
i. Difference 1: 
        
        The difference between number of businesses which are open and are closed  is 6960.
        
ii. Difference 2: 

    The difference between their average rating (of open and closed) is approximately (3.68 - 3.52) = 0.16.
    
SQL code used for analysis:

    SELECT count(id) as total_count
    ,avg(stars) as average_rating
    , avg(review_count) as average_count
    ,CASE
        WHEN is_open = 1 THEN 'open'
        ELSE 'closed'
    END AS open_status
    from business
    group by is_open;
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         I would like to find the average(stars) of the review table and average(stars) and average(review_count) of the business by the the each business category in each of the cities. Then, I wanted the follwing:
         a. Whether there is any association bettween the average(stars) of the review table with  average(stars) and average(review_count) of the business table.
         b. I would like to find the cities and corresponding category whose average(stars) of the review are missing. 
         d. I wanted to know which city has best review for the each of the categories.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
          I need average of the stars and and review_count of the Business table of the each of the cities. 
          I need to get the average of stars from the review table and category from the category table. 
          Therfore, I need to merge those three table by using the join operator. 
                  
iii. Output of your finished dataset:

+-----------------+---------------+-------------------+------------------+------------------------+
| avg_review_star | city          | avg_business_star | avg_review_count | category               |
+-----------------+---------------+-------------------+------------------+------------------------+
|             5.0 | Chandler      |               4.5 |             35.7 | Desserts               |
|             5.0 | Cleveland     |               3.9 |            121.8 | Sandwiches             |
|             4.8 | Phoenix       |               3.8 |            153.1 | American (Traditional) |
|             4.7 | Phoenix       |               3.9 |            341.8 | Barbeque               |
|             4.7 | Montréal      |               3.6 |            114.9 | Bars                   |
|             4.7 | Toronto       |               3.8 |            129.5 | Food                   |
|             4.7 | Phoenix       |               4.0 |            431.0 | Smokehouse             |
|             4.6 | Toronto       |               3.5 |             84.3 | Restaurants            |
|             4.5 | Las Vegas     |               3.7 |            520.3 | Asian Fusion           |
|             4.5 | Phoenix       |               3.7 |            115.8 | Breakfast & Brunch     |
|             4.5 | Las Vegas     |               3.3 |            312.8 | Chinese                |
|             4.5 | Toronto       |               4.2 |            483.0 | Ethnic Food            |
|             4.5 | Cleveland     |               4.5 |            723.0 | Farmers Market         |
|             4.5 | Cleveland     |               4.5 |            723.0 | Fruits & Veggies       |
|             4.5 | Las Vegas     |               4.0 |            768.0 | Malaysian              |
|             4.5 | Cleveland     |               4.5 |            723.0 | Market Stalls          |
|             4.5 | Cleveland     |               4.5 |            723.0 | Meat Shops             |
|             4.5 | Las Vegas     |               3.5 |            513.7 | Noodles                |
|             4.5 | Cleveland     |               4.5 |            723.0 | Public Markets         |
|             4.5 | Cleveland     |               4.5 |            723.0 | Seafood Markets        |
|             4.5 | Mississauga   |               4.0 |             54.8 | Shopping               |
|             4.5 | Las Vegas     |               3.8 |            519.0 | Soup                   |
|             4.5 | Toronto       |               4.1 |            269.8 | Specialty Food         |
|             4.5 | Las Vegas     |               4.0 |            768.0 | Taiwanese              |
|             4.0 | Cottage Grove |               4.2 |             13.1 | Active Life            |
+-----------------+---------------+-------------------+------------------+------------------------+
(Output limit exceeded, 25 of 258 total rows shown)

-- by ascending order
+-----------------+------------+-------------------+------------------+----------------------+
| avg_review_star | city       | avg_business_star | avg_review_count | category             |
+-----------------+------------+-------------------+------------------+----------------------+
|             2.0 | Pittsburgh |               3.5 |              7.0 | Arts & Entertainment |
|             2.0 | Pittsburgh |               3.5 |              7.0 | Music Venues         |
|             4.0 | Toronto    |               3.5 |             29.0 | Active Life          |
|             4.0 | Toronto    |               3.5 |             29.0 | Beaches              |
|             4.0 | Aurora     |               3.5 |             32.0 | Indian               |
|             4.0 | Phoenix    |               3.9 |            325.0 | Nightlife            |
|             4.0 | Aurora     |               3.5 |             32.0 | Pakistani            |
|             4.0 | Toronto    |               3.5 |             29.0 | Parks                |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Asian Fusion         |
|             4.5 | Phoenix    |               4.0 |            188.0 | Breakfast & Brunch   |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Chinese              |
|             4.5 | Cleveland  |               4.5 |            723.0 | Ethnic Food          |
|             4.5 | Cleveland  |               4.5 |            723.0 | Farmers Market       |
|             4.5 | Cleveland  |               4.5 |            723.0 | Fruits & Veggies     |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Malaysian            |
|             4.5 | Cleveland  |               4.5 |            723.0 | Market Stalls        |
|             4.5 | Cleveland  |               4.5 |            723.0 | Meat Shops           |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Noodles              |
|             4.5 | Cleveland  |               4.5 |            723.0 | Public Markets       |
|             4.5 | Cleveland  |               4.5 |            723.0 | Seafood Markets      |
|             4.5 | Cleveland  |               4.5 |            723.0 | Shopping             |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Soup                 |
|             4.5 | Cleveland  |               4.5 |            723.0 | Specialty Food       |
|             4.5 | Las Vegas  |               4.0 |            768.0 | Taiwanese            |
|             4.6 | Phoenix    |               4.0 |            399.8 | Restaurants          |
+-----------------+------------+-------------------+------------------+----------------------+
(Output limit exceeded, 25 of 32 total rows shown)

         
         
iv. Provide the SQL code you used to create your final dataset:
    
    SELECT round(avg(r.stars),1) as avg_review_star,
        b.city, round(avg(b.stars), 1) as avg_business_star,
        round(avg(b.review_count),1) as avg_review_count, 
        c.category
    FROM business as b
    LEFT JOIN category as c
    ON b.id = c.business_id
    LEFT JOIN review as r 
    ON b.id = r.business_id
    group by c.category
    order by avg_review_star desc;


---------------------------------------------
-- by ascending order

    SELECT round(avg(r.stars),1) as avg_review_star,
        b.city, round(avg(b.stars), 1) as avg_business_star,
        round(avg(b.review_count),1) as avg_review_count, 
        c.category
    FROM business as b
    JOIN category as c
    ON b.id = c.business_id
    JOIN review as r 
    ON b.id = r.business_id
    group by c.category
    order by avg_review_star asc

